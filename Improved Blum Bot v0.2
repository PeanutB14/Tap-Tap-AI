import pyautogui
import cv2
import numpy as np
import time

# Load the screenshot of the Play button (You need to take and save this)
play_button_image = 'play_button.png'

# Start by locating the Play button and clicking it
def click_play_button():
    try:
        play_button_location = pyautogui.locateCenterOnScreen(play_button_image, confidence=0.8)
        if play_button_location:
            pyautogui.click(play_button_location)
            print("Clicked on Play button")
            return True
        else:
            print("Play button not found")
            return False
    except Exception as e:
        print(f"Error finding Play button: {e}")
        return False

# Function to detect and click on green snowflakes
def click_green_snowflakes():
    screen = pyautogui.screenshot()
    img = np.array(screen)
    img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)

    # Define the color range for green (You may need to adjust these values)
    lower_green = np.array([35, 100, 100])
    upper_green = np.array([85, 255, 255])

    hsv_img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    mask = cv2.inRange(hsv_img, lower_green, upper_green)

    # Find contours of the green areas (snowflakes)
    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    for contour in contours:
        x, y, w, h = cv2.boundingRect(contour)
        # Click in the center of each detected snowflake
        pyautogui.click(x + w//2, y + h//2)
        time.sleep(0.1)  # Small delay between clicks

# Main function to run the bot
def main():
    if click_play_button():
        start_time = time.time()
        game_duration = 60  # Example: the game lasts for 60 seconds

        while True:
            elapsed_time = time.time() - start_time
            if elapsed_time > game_duration:
                print("Game Over!")
                break

            click_green_snowflakes()

            # Small delay before the next check
            time.sleep(1)

if __name__ == "__main__":
    main()
